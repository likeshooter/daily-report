"ZWL
今日分析msg数：
今日发现issue数：
今日回传case数：
日报：
1、验证save时，发现会打印两条sessionInfo信息，和燕宁讨论发现是因为多做了一次-log_only操作；这边让研发改为执行了多少命令就应该打印多少命令；
2、验证violation diff和sg增量的不同之处，sg选择增量模式后run才会去做对比，而且是只和上次结果做对比，退出增量模式后再run，会删除之前的对比数据，再次增量模式，不会再有之前的对比数据；反观ecdc，则是会保存所有的运行数据，在使用save时也会把这所有数据保存下来，这数据是否会过于庞大呢，保存所有的数据是否有必要？"	"LRF
今日分析msg数：
今日发现issue数：
今日回传case数：
日报：
1.回归DTS单
USBC:
DTS2025060505428 -- Diff243-synth45-merge_with_other_source
DTS2025061625881 -- Diff8-algorithm2
DTS2025061626489 
射频3拍
DTS2025061218957
2.帮RD构造小case"	"JR
今日分析msg数：159
今日发现issue数：
今日回传case数：
日报：
1.分析Hi18XXE APP_CORE新增的误报漏报，今天分析到的都是差异pass-dc、Diff80、Diff147、Diff234，分析完成后merge了csv并处理了merge后csv里出现的标记冲突；
2.在分析过程中发现，一些message应该标记为差异Diff80，但是脚本却把这些message标记为Diff91,已向心雨反馈"	"CXY
今日分析msg数：
今日发现issue数：
今日回传case数：
日报：
1.根据最新的lint相关的cdc差异修改脚本
2.debug新泛化上出现的漏抓sg message的bug，初步判断是由于脚本中在处理bus类的diff时，用regsub -all去掉了obj中的bit信号，但是对于新泛化这种obj层次比较复杂的情况，信号名中间有bit的情况（如信号：TOP/G_INP_FIFO[1].G_IP_FIFO_EN/fifo_ff[9:0]）会被误操作,导致在脚本后面流程中，会误将sg的message删除掉。已经修改这部分逻辑，正在测试中"	"CJR
今日分析msg数：34
今日发现issue数：
今日回传case数：
日报：1.分析APP_CORE ac新增问题：
1.1  2条属于DTS2025061748980
1.2 30条属于Diff234，Diff80，常值问题导致部分比特位没报
1.3 2条由于常值问题导致漏报Ac，是因为常值影响导致ENNO不存在crossing。在源头处因为SG没有推常值，属于差异Diff171
2.验证APP_CORE conv04问题（DTS2025060507072）
3.跑门禁数据统计脚本。修改脚本
"	"TZQ
今日分析msg数：512
今日发现issue数：1
今日回传case数：
日报：1.分析NFI_PHYG_TOP的Ac新增部分，发现ptg_tim_gather.v新增的误报漏报上个版本都是报的同步，本次报的都是不同步，经过分析，发现destination的d pin的cluster是gated，在增量原理图中没有画出qualifier或者是qualifier跟source merge的gate的cluster是ungated，已提单DTS2025061838027
2.跑NFI_TOP的Ac的比对"	"TZB
今日分析msg数：71
今日发现issue数：
今日回传case数：
日报：
1.分析NFI-PHYG-TOP中部分文件中ac的新增部分，都是同一类问题（一个destination有多个source的情况下会漏抓一些source）
2.分析反标的csv，存在漏标问题，何琦已知晓
3.分析DDR_SUB里Ac中原来已经标记为DTS2025052713690（DTS系统已经回归）但是在csv里还有issue号的message，属于差异Diff59"	"SYH
今日分析msg数：
今日发现issue数：
今日回传case数：
日报：
1.关单DTS2025060416360，DTS2025052920772，DTS2025053008592，DTS2025060416360，DTS2025060416360
2.分析NFI_PHYG_TOP新增部分，和智强确认了昨天的问题情形，提单DTS2025061838027。
3.帮涣东何琦debug，常值的dc对比流程，一个是脚本中正则使用问题，另一个是提取出来的小case给DC跑，DC不报常值，经分析，是因为提取出来的小case中常值DFF unload，导致在elaborate中被当作dead code被优化。需要get_hdl_info增加提取内容，保证提取出来的常值DFF至少能够load所在module的output。避免elaborate处就优化了代码。经试验，手动更改后，DC会在compile流程中多报OPT-1027(寄存器优化),需要脚本额外去处理这部分msg。"
